[{"title":"java实验三题目&代码","url":"/2024/10/25/%E5%AE%9E%E9%AA%8C%E4%B8%89%E9%A2%98%E7%9B%AE&%E4%BB%A3%E7%A0%81/","content":"<!--toc-->\n\n\n\n<h1 id=\"实验三：Java-面向对象编程及多线程\"><a href=\"#实验三：Java-面向对象编程及多线程\" class=\"headerlink\" title=\"实验三：Java 面向对象编程及多线程\"></a>实验三：Java 面向对象编程及多线程</h1><h3 id=\"一、实验内容\"><a href=\"#一、实验内容\" class=\"headerlink\" title=\"一、实验内容\"></a>一、实验内容</h3><p>该实验项目内容包括：多态性与动态绑定；包的使用与访问控制；接口的实现<br>与运用。线程的创建和使用；掌握方法覆盖的使用。</p>\n<h3 id=\"二、实验步骤\"><a href=\"#二、实验步骤\" class=\"headerlink\" title=\"二、实验步骤\"></a>二、实验步骤</h3><p> 1、总体任务</p>\n<ul>\n<li>编写程序实现多态性与动态绑定，掌握方法覆盖的使用。</li>\n<li>编写程序掌握线程的创建和使用。</li>\n<li>实现并运用接口。</li>\n<li>编译、调试并验证结果。</li>\n<li>其他内容（根据个人情况确定）。</li>\n</ul>\n<p>2、具体实验程序<br>（1） 设计三个类，分别是学生类 Student、本科生类 Undergraduate、研究生类 Postgraduate，其中 Student 类是一个抽象类，包含一些基本的学生信息如姓名、所学课程、课程成绩等。Undergraduate 类和 Postgraduate 类均为 Student 的子类，它们之间的主要差别在于课程成绩等级的计算方法有所不同。具体成绩等级标准如下：</p>\n<table>\n<thead>\n<tr>\n<th>本科生标准</th>\n<th>研究生标准</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>80-100 优秀</td>\n<td>90-100 优秀</td>\n</tr>\n<tr>\n<td>70-80 良好</td>\n<td>80-90 良好</td>\n</tr>\n<tr>\n<td>60-70 一般</td>\n<td>70-80 一般</td>\n</tr>\n<tr>\n<td>50-60 及格</td>\n<td>60-70 及格</td>\n</tr>\n<tr>\n<td>50 以下 不及格</td>\n<td>60 以下 不及格</td>\n</tr>\n<tr>\n<td>其中假设某班级既有本科生也有研究生，编写程序统计出全班学生的成绩等级并显示出来。此题的关键是设计一个既能存放本科生对象又能存放研究生对象的学生数组。</td>\n<td></td>\n</tr>\n</tbody></table>\n<ul>\n<li>完成上述功能的代码编写，并给出运行结果。</li>\n<li>在环境中编译运行程序，确定哪个 .class 文件是可运行的。 </li>\n<li>模仿程序，新增一个高中生类 HighSchooler，其成绩等级计算标准为： <ul>\n<li>80~100 好 </li>\n<li>60~80 中 </li>\n<li>60 以下 差</li>\n</ul>\n</li>\n</ul>\n<p>（2）编写应用程序，创建一个文件输出流，向文件中分别写入以下类型数据：int、double 和字符串串，然后创建一个文件输入流，将文件中写入的数据显示在屏幕上。</p>\n<p>（3） 编写一个类 MyThread，它继承自 Thread 类：类中定义一个长整型变量delay；还定义有两个参数的构造方法，第 1 个参数 str 是 String 类型，通过 super(str)调用父类构造方法给线程命名，第 2 个参数 delay 是长整型，用来初始化类中的变量delay。MyThread 类中的 run 方法如下实现：循环 3 次，每次先在命令行输出线程第几次运行，然后休眠 delay 毫秒，循环结束后输出该线程结束的信息。编写应用程序TestThread.java，在其 main 方法中创建 MyThread 类的三个对象 t1、t2、t3，分别指定线程名字为“线程 A”、“线程 B”和“线程 C”，休眠时间为 1000 毫秒、2000 毫秒、3000 毫秒，并启动这三个线程，main 方法的最后输出当前活动线程的数目。</p>\n<p>（4）设计和实现一个 Soundable 接口，该接口具有发声功能，同时还能够调节声音大小。Soundable接口的这些功能将会由3种声音设备来具体实现，它们分别是收音机 Radio、随身听Walkman和手机Mobilephone。最后还要设计一个应用程序类来使用这些实现了Soundable 接口的声音设备类。程序运行时，先询问用户想听哪种设备，然后程序就会按照该设备的工作方式来发出声音。<br>    (a)环境中进行编译，编译的结果将会产生哪些个class文件，分别是哪些？为什么？<br>    (b) 编译之后运行程序，观察所得结果。<br>    (c) 现在假定要为程序增加一个闹钟类Clock，该类也实现 Soundable 接口， 能够发出滴答声，请将以下的Clock类加入到测试类中，修改之后，重新编译并运行，记录结果。</p>\n<ol>\n<li>现在请模仿本实验的程序设计出一个自己的接口程序，要求先设计一个moveable 可移动接口，然后分别设计 3 个线程 , 即汽车 Car 、轮船 Ship 、飞机Aircraft 来实现该接口，在测试类中可以创建多个线程，启用线程完成各自的工作（用不同的方式创建这些线程）。</li>\n</ol>\n<h3 id=\"三、思考题\"><a href=\"#三、思考题\" class=\"headerlink\" title=\"三、思考题\"></a>三、思考题</h3><ol>\n<li>接口与抽象类的区别是什么？</li>\n<li>如何创建线程？有几种方法？</li>\n</ol>\n<h2 id=\"第一题：设计三个类\"><a href=\"#第一题：设计三个类\" class=\"headerlink\" title=\"第一题：设计三个类\"></a>第一题：设计三个类</h2><p>设计三个类，分别是学生类 Student、本科生类 Undergraduate、研究生类 Postgraduate，其中 Student 类是一个抽象类，包含一些基本的学生信息如姓名、所学课程、课程成绩等。Undergraduate 类和 Postgraduate 类均为 Student 的子类，它们之间的主要差别在于课程成绩等级的计算方法有所不同。</p>\n<h3 id=\"创建抽象类Student\"><a href=\"#创建抽象类Student\" class=\"headerlink\" title=\"创建抽象类Student\"></a>创建抽象类Student</h3><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Student</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">protected</span> String name; <span class=\"comment\">//姓名</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> String course; <span class=\"comment\">//课程</span></span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"type\">double</span> score;  <span class=\"comment\">//成绩</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\">//构造方法</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Student</span><span class=\"params\">(String name, String course, <span class=\"type\">double</span> score)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.name = name;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.course = course;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.score = score;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">\t<span class=\"comment\">//抽象方法</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> String <span class=\"title function_\">getGrade</span><span class=\"params\">()</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">\t<span class=\"comment\">//getter方法，用于返回学生姓名</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getName</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> name;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getCourse</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> course;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">double</span> <span class=\"title function_\">getScore</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> score;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"创建本科生类\"><a href=\"#创建本科生类\" class=\"headerlink\" title=\"创建本科生类\"></a>创建本科生类</h3><p>继承Student类</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Undergraduate</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Student</span> &#123;</span><br><span class=\"line\">\t<span class=\"comment\">//`Postgraduate` 类也是继承自 `Student` 类。</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Undergraduate</span><span class=\"params\">(String name, String course, <span class=\"type\">double</span> score)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>(name, course, score);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getGrade</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (score &gt;= <span class=\"number\">80</span>) <span class=\"keyword\">return</span> <span class=\"string\">&quot;优秀&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (score &gt;= <span class=\"number\">70</span>) <span class=\"keyword\">return</span> <span class=\"string\">&quot;良好&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (score &gt;= <span class=\"number\">60</span>) <span class=\"keyword\">return</span> <span class=\"string\">&quot;一般&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (score &gt;= <span class=\"number\">50</span>) <span class=\"keyword\">return</span> <span class=\"string\">&quot;及格&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">return</span> <span class=\"string\">&quot;不及格&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"创建研究生类\"><a href=\"#创建研究生类\" class=\"headerlink\" title=\"创建研究生类\"></a>创建研究生类</h3><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Undergraduate</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Student</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Undergraduate</span><span class=\"params\">(String name, String course, <span class=\"type\">double</span> score)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>(name, course, score);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getGrade</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (score &gt;= <span class=\"number\">80</span>) <span class=\"keyword\">return</span> <span class=\"string\">&quot;优秀&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (score &gt;= <span class=\"number\">70</span>) <span class=\"keyword\">return</span> <span class=\"string\">&quot;良好&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (score &gt;= <span class=\"number\">60</span>) <span class=\"keyword\">return</span> <span class=\"string\">&quot;一般&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (score &gt;= <span class=\"number\">50</span>) <span class=\"keyword\">return</span> <span class=\"string\">&quot;及格&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">return</span> <span class=\"string\">&quot;不及格&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"创建高中生类\"><a href=\"#创建高中生类\" class=\"headerlink\" title=\"创建高中生类\"></a>创建高中生类</h3><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">HighSchooler</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Student</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">HighSchooler</span><span class=\"params\">(String name, String course, <span class=\"type\">double</span> score)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>(name, course, score);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getGrade</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (score &gt;= <span class=\"number\">80</span>) <span class=\"keyword\">return</span> <span class=\"string\">&quot;好&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (score &gt;= <span class=\"number\">60</span>) <span class=\"keyword\">return</span> <span class=\"string\">&quot;中&quot;</span>;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">return</span> <span class=\"string\">&quot;差&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"主程序\"><a href=\"#主程序\" class=\"headerlink\" title=\"主程序\"></a>主程序</h3><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Main</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        Student[] students = <span class=\"keyword\">new</span> <span class=\"title class_\">Student</span>[<span class=\"number\">5</span>];</span><br><span class=\"line\">        students[<span class=\"number\">0</span>] = <span class=\"keyword\">new</span> <span class=\"title class_\">Undergraduate</span>(<span class=\"string\">&quot;Alice&quot;</span>, <span class=\"string\">&quot;Math&quot;</span>, <span class=\"number\">85</span>);</span><br><span class=\"line\">        students[<span class=\"number\">1</span>] = <span class=\"keyword\">new</span> <span class=\"title class_\">Undergraduate</span>(<span class=\"string\">&quot;Bob&quot;</span>, <span class=\"string\">&quot;Science&quot;</span>, <span class=\"number\">72</span>);</span><br><span class=\"line\">        students[<span class=\"number\">2</span>] = <span class=\"keyword\">new</span> <span class=\"title class_\">Postgraduate</span>(<span class=\"string\">&quot;Charlie&quot;</span>, <span class=\"string\">&quot;Math&quot;</span>, <span class=\"number\">92</span>);</span><br><span class=\"line\">        students[<span class=\"number\">3</span>] = <span class=\"keyword\">new</span> <span class=\"title class_\">Postgraduate</span>(<span class=\"string\">&quot;Daisy&quot;</span>, <span class=\"string\">&quot;Science&quot;</span>, <span class=\"number\">65</span>);</span><br><span class=\"line\">        students[<span class=\"number\">4</span>] = <span class=\"keyword\">new</span> <span class=\"title class_\">HighSchooler</span>(<span class=\"string\">&quot;Eve&quot;</span>, <span class=\"string\">&quot;English&quot;</span>, <span class=\"number\">75</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;全班学生成绩等级：&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Student student : students) &#123;</span><br><span class=\"line\">            System.out.println(student.getName() + <span class=\"string\">&quot; (&quot;</span> + student.getCourse() + <span class=\"string\">&quot;): &quot;</span> + student.getGrade());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"总代码：\"><a href=\"#总代码：\" class=\"headerlink\" title=\"总代码：\"></a>总代码：</h3><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// Student.java  </span></span><br><span class=\"line\"><span class=\"keyword\">abstract</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Student</span> &#123;  </span><br><span class=\"line\">    <span class=\"keyword\">protected</span> String name;  </span><br><span class=\"line\">    <span class=\"keyword\">protected</span> String course;  </span><br><span class=\"line\">    <span class=\"keyword\">protected</span> <span class=\"type\">double</span> score;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Student</span><span class=\"params\">(String name, String course, <span class=\"type\">double</span> score)</span> &#123;  </span><br><span class=\"line\">        <span class=\"built_in\">this</span>.name = name;  </span><br><span class=\"line\">        <span class=\"built_in\">this</span>.course = course;  </span><br><span class=\"line\">        <span class=\"built_in\">this</span>.score = score;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">abstract</span> String <span class=\"title function_\">getGrade</span><span class=\"params\">()</span>;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getName</span><span class=\"params\">()</span> &#123;  </span><br><span class=\"line\">        <span class=\"keyword\">return</span> name;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getCourse</span><span class=\"params\">()</span> &#123;  </span><br><span class=\"line\">        <span class=\"keyword\">return</span> course;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"type\">double</span> <span class=\"title function_\">getScore</span><span class=\"params\">()</span> &#123;  </span><br><span class=\"line\">        <span class=\"keyword\">return</span> score;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\">// Undergraduate.java  </span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Undergraduate</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Student</span> &#123;  </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Undergraduate</span><span class=\"params\">(String name, String course, <span class=\"type\">double</span> score)</span> &#123;  </span><br><span class=\"line\">        <span class=\"built_in\">super</span>(name, course, score);  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"meta\">@Override</span>  </span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getGrade</span><span class=\"params\">()</span> &#123;  </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (score &gt;= <span class=\"number\">80</span>) <span class=\"keyword\">return</span> <span class=\"string\">&quot;优秀&quot;</span>;  </span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (score &gt;= <span class=\"number\">70</span>) <span class=\"keyword\">return</span> <span class=\"string\">&quot;良好&quot;</span>;  </span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (score &gt;= <span class=\"number\">60</span>) <span class=\"keyword\">return</span> <span class=\"string\">&quot;一般&quot;</span>;  </span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (score &gt;= <span class=\"number\">50</span>) <span class=\"keyword\">return</span> <span class=\"string\">&quot;及格&quot;</span>;  </span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">return</span> <span class=\"string\">&quot;不及格&quot;</span>;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\">// Postgraduate.java  </span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">Postgraduate</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Student</span> &#123;  </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Postgraduate</span><span class=\"params\">(String name, String course, <span class=\"type\">double</span> score)</span> &#123;  </span><br><span class=\"line\">        <span class=\"built_in\">super</span>(name, course, score);  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"meta\">@Override</span>  </span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getGrade</span><span class=\"params\">()</span> &#123;  </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (score &gt;= <span class=\"number\">90</span>) <span class=\"keyword\">return</span> <span class=\"string\">&quot;优秀&quot;</span>;  </span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (score &gt;= <span class=\"number\">80</span>) <span class=\"keyword\">return</span> <span class=\"string\">&quot;良好&quot;</span>;  </span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (score &gt;= <span class=\"number\">70</span>) <span class=\"keyword\">return</span> <span class=\"string\">&quot;一般&quot;</span>;  </span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (score &gt;= <span class=\"number\">60</span>) <span class=\"keyword\">return</span> <span class=\"string\">&quot;及格&quot;</span>;  </span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">return</span> <span class=\"string\">&quot;不及格&quot;</span>;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\">// HighSchooler.java  </span></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">HighSchooler</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Student</span> &#123;  </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">HighSchooler</span><span class=\"params\">(String name, String course, <span class=\"type\">double</span> score)</span> &#123;  </span><br><span class=\"line\">        <span class=\"built_in\">super</span>(name, course, score);  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\">    <span class=\"meta\">@Override</span>  </span><br><span class=\"line\">    <span class=\"keyword\">public</span> String <span class=\"title function_\">getGrade</span><span class=\"params\">()</span> &#123;  </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (score &gt;= <span class=\"number\">80</span>) <span class=\"keyword\">return</span> <span class=\"string\">&quot;好&quot;</span>;  </span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (score &gt;= <span class=\"number\">60</span>) <span class=\"keyword\">return</span> <span class=\"string\">&quot;中&quot;</span>;  </span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">return</span> <span class=\"string\">&quot;差&quot;</span>;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;  </span><br><span class=\"line\">  </span><br><span class=\"line\"><span class=\"comment\">// Main.java  </span></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Main</span> &#123;  </span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;  </span><br><span class=\"line\">        Student[] students = <span class=\"keyword\">new</span> <span class=\"title class_\">Student</span>[<span class=\"number\">5</span>];  </span><br><span class=\"line\">        students[<span class=\"number\">0</span>] = <span class=\"keyword\">new</span> <span class=\"title class_\">Undergraduate</span>(<span class=\"string\">&quot;Alice&quot;</span>, <span class=\"string\">&quot;Math&quot;</span>, <span class=\"number\">85</span>);  </span><br><span class=\"line\">        students[<span class=\"number\">1</span>] = <span class=\"keyword\">new</span> <span class=\"title class_\">Undergraduate</span>(<span class=\"string\">&quot;Bob&quot;</span>, <span class=\"string\">&quot;Science&quot;</span>, <span class=\"number\">72</span>);  </span><br><span class=\"line\">        students[<span class=\"number\">2</span>] = <span class=\"keyword\">new</span> <span class=\"title class_\">Postgraduate</span>(<span class=\"string\">&quot;Charlie&quot;</span>, <span class=\"string\">&quot;Math&quot;</span>, <span class=\"number\">92</span>);  </span><br><span class=\"line\">        students[<span class=\"number\">3</span>] = <span class=\"keyword\">new</span> <span class=\"title class_\">Postgraduate</span>(<span class=\"string\">&quot;Daisy&quot;</span>, <span class=\"string\">&quot;Science&quot;</span>, <span class=\"number\">65</span>);  </span><br><span class=\"line\">        students[<span class=\"number\">4</span>] = <span class=\"keyword\">new</span> <span class=\"title class_\">HighSchooler</span>(<span class=\"string\">&quot;Eve&quot;</span>, <span class=\"string\">&quot;English&quot;</span>, <span class=\"number\">75</span>);  </span><br><span class=\"line\">  </span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;全班学生成绩等级：&quot;</span>);  </span><br><span class=\"line\">        <span class=\"keyword\">for</span> (Student student : students) &#123;  </span><br><span class=\"line\">            System.out.println(student.getName() + <span class=\"string\">&quot; (&quot;</span> + student.getCourse() + <span class=\"string\">&quot;): &quot;</span> + student.getGrade());  </span><br><span class=\"line\">        &#125;  </span><br><span class=\"line\">    &#125;  </span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"第二题：创建文件输出流\"><a href=\"#第二题：创建文件输出流\" class=\"headerlink\" title=\"第二题：创建文件输出流\"></a>第二题：创建文件输出流</h2><p>题目：编写应用程序，创建一个文件输出流，向文件中分别写入以下类型数据：int、double 和字符串串，然后创建一个文件输入流，将文件中写入的数据显示在屏幕上。</p>\n<h3 id=\"编写输入数据的代码\"><a href=\"#编写输入数据的代码\" class=\"headerlink\" title=\"编写输入数据的代码\"></a>编写输入数据的代码</h3><p>定义要写入的文件名，然后写入文件</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">FileReadWriteExample</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">fileName</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;data.txt&quot;</span>;</span><br><span class=\"line\">        <span class=\"comment\">// 写入数据到文件</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span> (<span class=\"type\">DataOutputStream</span> <span class=\"variable\">dataOutputStream</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DataOutputStream</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">FileOutputStream</span>(fileName))) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 写入 int 类型数据</span></span><br><span class=\"line\">            dataOutputStream.writeInt(<span class=\"number\">42</span>);</span><br><span class=\"line\">            <span class=\"comment\">// 写入 double 类型数据</span></span><br><span class=\"line\">            dataOutputStream.writeDouble(<span class=\"number\">3.14159</span>);</span><br><span class=\"line\">            <span class=\"comment\">// 写入字符串</span></span><br><span class=\"line\">            dataOutputStream.writeUTF(<span class=\"string\">&quot;Hello, World!&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;数据已成功写入文件 &quot;</span> + fileName);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            System.err.println(<span class=\"string\">&quot;写入文件时发生错误: &quot;</span> + e.getMessage());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<h4 id=\"解释\"><a href=\"#解释\" class=\"headerlink\" title=\"解释\"></a>解释</h4><ul>\n<li><code>try (DataOutputStream dataOutputStream = new DataOutputStream(new FileOutputStream(fileName)))</code>:<ul>\n<li>创建一个 <code>FileOutputStream</code> 对象，用于向指定的文件（<code>fileName</code>）写入字节。</li>\n<li>将 <code>FileOutputStream</code> 作为参数传递给 <code>DataOutputStream</code>，后者是一个数据输出流，能够写入 Java 的基本数据类型（如 <code>int</code>、<code>double</code> 等）以及字符串。</li>\n</ul>\n</li>\n<li><strong><code>dataOutputStream.writeInt(42)</code></strong>:<ul>\n<li>调用 <code>dataOutputStream</code> 的 <code>writeInt</code> 方法，将整数 <code>42</code> 写入文件。数据以字节形式存储，因此可以被其他 Java 程序读取。</li>\n</ul>\n</li>\n<li><strong><code>&#125; catch (IOException e) &#123;</code></strong>:<ul>\n<li>如果在 <code>try</code> 块中发生 <code>IOException</code>（例如，文件不可写，磁盘满等），程序将转入此 <code>catch</code> 块来处理异常。</li>\n<li><code>e</code> 是捕获的异常对象，代表发生的具体异常。</li>\n</ul>\n</li>\n<li><strong><code>System.err.println(&quot;写入文件时发生错误: &quot; + e.getMessage())</code></strong>:<ul>\n<li>输出错误消息到标准错误流，包含具体的异常信息。<code>e.getMessage()</code> 获取异常的详细信息，帮助开发者理解发生了什么错误。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"一般的try语句\"><a href=\"#一般的try语句\" class=\"headerlink\" title=\"一般的try语句\"></a>一般的try语句</h4><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 可能会抛出异常的代码</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">catch</span> (ExceptionType e) &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 处理异常的代码</span></span><br><span class=\"line\">&#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">    <span class=\"comment\">// 可选的代码，无论是否发生异常都会执行</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>用一般的try实现上面的功能：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.DataOutputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.FileOutputStream;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.IOException;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">FileWriteExample</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">fileName</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;output.dat&quot;</span>; <span class=\"comment\">// 指定文件名</span></span><br><span class=\"line\">        <span class=\"type\">DataOutputStream</span> <span class=\"variable\">dataOutputStream</span> <span class=\"operator\">=</span> <span class=\"literal\">null</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 创建 FileOutputStream 对象</span></span><br><span class=\"line\">            <span class=\"type\">FileOutputStream</span> <span class=\"variable\">fileOutputStream</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">FileOutputStream</span>(fileName);</span><br><span class=\"line\">            <span class=\"comment\">// 创建 DataOutputStream 对象</span></span><br><span class=\"line\">            dataOutputStream = <span class=\"keyword\">new</span> <span class=\"title class_\">DataOutputStream</span>(fileOutputStream);</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 写入 int 类型数据</span></span><br><span class=\"line\">            dataOutputStream.writeInt(<span class=\"number\">42</span>);</span><br><span class=\"line\">            <span class=\"comment\">// 写入 double 类型数据</span></span><br><span class=\"line\">            dataOutputStream.writeDouble(<span class=\"number\">3.14159</span>);</span><br><span class=\"line\">            <span class=\"comment\">// 写入字符串</span></span><br><span class=\"line\">            dataOutputStream.writeUTF(<span class=\"string\">&quot;Hello, World!&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;数据已成功写入文件 &quot;</span> + fileName);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            System.err.println(<span class=\"string\">&quot;写入文件时发生错误: &quot;</span> + e.getMessage());</span><br><span class=\"line\">        &#125; <span class=\"keyword\">finally</span> &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 关闭 DataOutputStream</span></span><br><span class=\"line\">            <span class=\"keyword\">if</span> (dataOutputStream != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                    dataOutputStream.close();</span><br><span class=\"line\">                &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">                    System.err.println(<span class=\"string\">&quot;关闭 DataOutputStream 时发生错误: &quot;</span> + e.getMessage());</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><strong>try-catch</strong>-finally:<ul>\n<li>用于捕获和处理异常。</li>\n<li>可以捕获在 <code>try</code> 块中抛出的异常，并在 <code>catch</code> 块中提供相应的处理逻辑。</li>\n<li>在 <code>finally</code> 块中确保在所有操作完成后正确关闭文件流，以释放资源。</li>\n</ul>\n</li>\n<li><strong>try-with-resources</strong>:<ul>\n<li>主要用于自动管理资源（如文件、数据库连接等）。</li>\n<li>确保在使用完资源后能够自动关闭它们，从而避免资源泄露。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"编写读取数据的代码\"><a href=\"#编写读取数据的代码\" class=\"headerlink\" title=\"编写读取数据的代码\"></a>编写读取数据的代码</h3><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">FileReadExample</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">fileName</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;data.txt&quot;</span>;  <span class=\"comment\">// 定义要读取的文件名</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 读取数据从文件</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span> (<span class=\"type\">DataInputStream</span> <span class=\"variable\">dataInputStream</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DataInputStream</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">FileInputStream</span>(fileName))) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 读取 int 类型数据</span></span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">intValue</span> <span class=\"operator\">=</span> dataInputStream.readInt();</span><br><span class=\"line\">            <span class=\"comment\">// 读取 double 类型数据</span></span><br><span class=\"line\">            <span class=\"type\">double</span> <span class=\"variable\">doubleValue</span> <span class=\"operator\">=</span> dataInputStream.readDouble();</span><br><span class=\"line\">            <span class=\"comment\">// 读取字符串</span></span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">stringValue</span> <span class=\"operator\">=</span> dataInputStream.readUTF();</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 显示读取的数据</span></span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;读取的数据：&quot;</span>);</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;int: &quot;</span> + intValue);</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;double: &quot;</span> + doubleValue);</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;String: &quot;</span> + stringValue);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            System.err.println(<span class=\"string\">&quot;读取文件时发生错误: &quot;</span> + e.getMessage());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"总代码\"><a href=\"#总代码\" class=\"headerlink\" title=\"总代码\"></a>总代码</h3><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.io.*;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">FileReadWriteExample</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">String</span> <span class=\"variable\">fileName</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;data.txt&quot;</span>;  <span class=\"comment\">// 定义要写入和读取的文件名</span></span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 写入数据到文件</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span> (<span class=\"type\">DataOutputStream</span> <span class=\"variable\">dataOutputStream</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DataOutputStream</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">FileOutputStream</span>(fileName))) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 写入 int 类型数据</span></span><br><span class=\"line\">            dataOutputStream.writeInt(<span class=\"number\">42</span>);</span><br><span class=\"line\">            <span class=\"comment\">// 写入 double 类型数据</span></span><br><span class=\"line\">            dataOutputStream.writeDouble(<span class=\"number\">3.14159</span>);</span><br><span class=\"line\">            <span class=\"comment\">// 写入字符串</span></span><br><span class=\"line\">            dataOutputStream.writeUTF(<span class=\"string\">&quot;Hello, World!&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;数据已成功写入文件 &quot;</span> + fileName);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            System.err.println(<span class=\"string\">&quot;写入文件时发生错误: &quot;</span> + e.getMessage());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 读取数据从文件</span></span><br><span class=\"line\">        <span class=\"keyword\">try</span> (<span class=\"type\">DataInputStream</span> <span class=\"variable\">dataInputStream</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">DataInputStream</span>(<span class=\"keyword\">new</span> <span class=\"title class_\">FileInputStream</span>(fileName))) &#123;</span><br><span class=\"line\">            <span class=\"comment\">// 读取 int 类型数据</span></span><br><span class=\"line\">            <span class=\"type\">int</span> <span class=\"variable\">intValue</span> <span class=\"operator\">=</span> dataInputStream.readInt();</span><br><span class=\"line\">            <span class=\"comment\">// 读取 double 类型数据</span></span><br><span class=\"line\">            <span class=\"type\">double</span> <span class=\"variable\">doubleValue</span> <span class=\"operator\">=</span> dataInputStream.readDouble();</span><br><span class=\"line\">            <span class=\"comment\">// 读取字符串</span></span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">stringValue</span> <span class=\"operator\">=</span> dataInputStream.readUTF();</span><br><span class=\"line\"></span><br><span class=\"line\">            <span class=\"comment\">// 显示读取的数据</span></span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;读取的数据：&quot;</span>);</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;int: &quot;</span> + intValue);</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;double: &quot;</span> + doubleValue);</span><br><span class=\"line\">            System.out.println(<span class=\"string\">&quot;String: &quot;</span> + stringValue);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (IOException e) &#123;</span><br><span class=\"line\">            System.err.println(<span class=\"string\">&quot;读取文件时发生错误: &quot;</span> + e.getMessage());</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"第三题：MyThread-类\"><a href=\"#第三题：MyThread-类\" class=\"headerlink\" title=\"第三题：MyThread 类\"></a>第三题：<code>MyThread</code> 类</h2><p>题目：<br>编写一个类 MyThread，它继承自 Thread 类：类中定义一个长整型变量delay；还定义有两个参数的构造方法，第 1 个参数 str 是 String 类型，通过 super(str)调用父类构造方法给线程命名，第 2 个参数 delay 是长整型，用来初始化类中的变量delay。<br>MyThread 类中的 run 方法如下实现：循环 3 次，每次先在命令行输出线程第几次运行，然后休眠 delay 毫秒，循环结束后输出该线程结束的信息。<br>编写应用程序TestThread.java，在其 main 方法中创建 MyThread 类的三个对象 t1、t2、t3，分别指定线程名字为“线程 A”、“线程 B”和“线程 C”，休眠时间为 1000 毫秒、2000 毫秒、3000 毫秒，并启动这三个线程，main 方法的最后输出当前活动线程的数目。</p>\n<h3 id=\"MyThread-java\"><a href=\"#MyThread-java\" class=\"headerlink\" title=\"MyThread.java\"></a>MyThread.java</h3><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">MyThread</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Thread</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">long</span> delay; <span class=\"comment\">// 延迟时间</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\">// 构造方法，接收线程名称和延迟时间</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">MyThread</span><span class=\"params\">(String str, <span class=\"type\">long</span> delay)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">super</span>(str); <span class=\"comment\">// 调用父类 Thread 的构造方法</span></span><br><span class=\"line\">        <span class=\"built_in\">this</span>.delay = delay; <span class=\"comment\">// 初始化 delay</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 循环三次</span></span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> <span class=\"number\">1</span>; i &lt;= <span class=\"number\">3</span>; i++) &#123;</span><br><span class=\"line\">            System.out.println(getName() + <span class=\"string\">&quot; 第 &quot;</span> + i + <span class=\"string\">&quot; 次运行&quot;</span>);</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                Thread.sleep(delay); <span class=\"comment\">// 线程休眠</span></span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (InterruptedException e) &#123;</span><br><span class=\"line\">                System.err.println(getName() + <span class=\"string\">&quot; 被中断: &quot;</span> + e.getMessage());</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        System.out.println(getName() + <span class=\"string\">&quot; 结束&quot;</span>); <span class=\"comment\">// 线程结束信息</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"TestThread-java\"><a href=\"#TestThread-java\" class=\"headerlink\" title=\"TestThread.java\"></a>TestThread.java</h3><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestThread</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 创建三个 MyThread 对象</span></span><br><span class=\"line\">        <span class=\"type\">MyThread</span> <span class=\"variable\">t1</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MyThread</span>(<span class=\"string\">&quot;线程 A&quot;</span>, <span class=\"number\">1000</span>);</span><br><span class=\"line\">        <span class=\"type\">MyThread</span> <span class=\"variable\">t2</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MyThread</span>(<span class=\"string\">&quot;线程 B&quot;</span>, <span class=\"number\">2000</span>);</span><br><span class=\"line\">        <span class=\"type\">MyThread</span> <span class=\"variable\">t3</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">MyThread</span>(<span class=\"string\">&quot;线程 C&quot;</span>, <span class=\"number\">3000</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 启动线程</span></span><br><span class=\"line\">        t1.start();</span><br><span class=\"line\">        t2.start();</span><br><span class=\"line\">        t3.start();</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 输出当前活动线程的数目</span></span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;当前活动线程的数目: &quot;</span> + Thread.activeCount());</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"第四题：Soundable-接口\"><a href=\"#第四题：Soundable-接口\" class=\"headerlink\" title=\"第四题：Soundable 接口\"></a>第四题：Soundable 接口</h2><p>题目：设计和实现一个 Soundable 接口，该接口具有发声功能，同时还能够调节声音大小。Soundable接口的这些功能将会由3种声音设备来具体实现，它们分别是收音机 Radio、随身听Walkman和手机Mobilephone。最后还要设计一个应用程序类来使用这些实现了Soundable 接口的声音设备类。程序运行时，先询问用户想听哪种设备，然后程序就会按照该设备的工作方式来发出声音。</p>\n<h3 id=\"定义-Soundable-接口\"><a href=\"#定义-Soundable-接口\" class=\"headerlink\" title=\"定义 Soundable 接口\"></a>定义 Soundable 接口</h3><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">Soundable</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">makeSound</span><span class=\"params\">()</span>;  <span class=\"comment\">// 发声方法</span></span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">adjustVolume</span><span class=\"params\">(<span class=\"type\">int</span> level)</span>;  <span class=\"comment\">// 调节音量的方法</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Radio类\"><a href=\"#Radio类\" class=\"headerlink\" title=\"Radio类\"></a>Radio类</h3><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Radio</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Soundable</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> volume;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">makeSound</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;收音机正在播放音乐...&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">adjustVolume</span><span class=\"params\">(<span class=\"type\">int</span> level)</span> &#123;</span><br><span class=\"line\">        volume = level;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;收音机音量调节为: &quot;</span> + volume);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Walkman-类\"><a href=\"#Walkman-类\" class=\"headerlink\" title=\"Walkman 类\"></a>Walkman 类</h3><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Walkman</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Soundable</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> volume;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">makeSound</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;随身听正在播放音乐...&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">adjustVolume</span><span class=\"params\">(<span class=\"type\">int</span> level)</span> &#123;</span><br><span class=\"line\">        volume = level;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;随身听音量调节为: &quot;</span> + volume);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Mobilephone-类\"><a href=\"#Mobilephone-类\" class=\"headerlink\" title=\"Mobilephone 类\"></a>Mobilephone 类</h3><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Mobilephone</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Soundable</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> volume;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">makeSound</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;手机正在播放铃声...&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">adjustVolume</span><span class=\"params\">(<span class=\"type\">int</span> level)</span> &#123;</span><br><span class=\"line\">        volume = level;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;手机音量调节为: &quot;</span> + volume);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Clock-类\"><a href=\"#Clock-类\" class=\"headerlink\" title=\"Clock 类\"></a>Clock 类</h3><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Clock</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Soundable</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> volume;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">makeSound</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;闹钟发出滴答声...&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">adjustVolume</span><span class=\"params\">(<span class=\"type\">int</span> level)</span> &#123;</span><br><span class=\"line\">        volume = level;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;闹钟音量调节为: &quot;</span> + volume);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"创建应用程序类\"><a href=\"#创建应用程序类\" class=\"headerlink\" title=\"创建应用程序类\"></a>创建应用程序类</h3><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> java.util.Scanner;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">SoundTest</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"type\">Scanner</span> <span class=\"variable\">scanner</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Scanner</span>(System.in);</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;请选择设备 (1: 收音机, 2: 随身听, 3: 手机, 4: 闹钟): &quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">choice</span> <span class=\"operator\">=</span> scanner.nextInt();</span><br><span class=\"line\"></span><br><span class=\"line\">        Soundable device;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">switch</span> (choice) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">1</span>:</span><br><span class=\"line\">                device = <span class=\"keyword\">new</span> <span class=\"title class_\">Radio</span>();</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">2</span>:</span><br><span class=\"line\">                device = <span class=\"keyword\">new</span> <span class=\"title class_\">Walkman</span>();</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">3</span>:</span><br><span class=\"line\">                device = <span class=\"keyword\">new</span> <span class=\"title class_\">Mobilephone</span>();</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">case</span> <span class=\"number\">4</span>:</span><br><span class=\"line\">                device = <span class=\"keyword\">new</span> <span class=\"title class_\">Clock</span>();</span><br><span class=\"line\">                <span class=\"keyword\">break</span>;</span><br><span class=\"line\">            <span class=\"keyword\">default</span>:</span><br><span class=\"line\">                System.out.println(<span class=\"string\">&quot;无效的选择。&quot;</span>);</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        device.makeSound(); <span class=\"comment\">// 发出声音</span></span><br><span class=\"line\">        System.out.print(<span class=\"string\">&quot;请输入音量(1-10): &quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">int</span> <span class=\"variable\">volumeLevel</span> <span class=\"operator\">=</span> scanner.nextInt();</span><br><span class=\"line\">        device.adjustVolume(volumeLevel); <span class=\"comment\">// 调节音量</span></span><br><span class=\"line\"></span><br><span class=\"line\">        scanner.close();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>问题：<br>    (a)环境中进行编译，编译的结果将会产生哪些个class文件，分别是哪些？为什么？<br>    (b) 编译之后运行程序，观察所得结果。<br>    (c) 现在假定要为程序增加一个闹钟类Clock，该类也实现 Soundable 接口， 能够发出滴答声，请将以下的Clock类加入到测试类中，修改之后，重新编译并运行，记录结果。<br> a) 在 IntelliJ IDEA 中编译上述代码后，程序将生成以下 <code>.class</code> 文件：</p>\n<ol>\n<li><strong>Soundable.class</strong>：接口 <code>Soundable</code> 的编译结果。</li>\n<li><strong>Radio.class</strong>：类 <code>Radio</code> 的编译结果，它实现了 <code>Soundable</code> 接口。</li>\n<li><strong>Walkman.class</strong>：类 <code>Walkman</code> 的编译结果，它实现了 <code>Soundable</code> 接口。</li>\n<li><strong>Mobilephone.class</strong>：类 <code>Mobilephone</code> 的编译结果，它实现了 <code>Soundable</code> 接口。</li>\n<li><strong>Clock.class</strong>：类 <code>Clock</code> 的编译结果，它实现了 <code>Soundable</code> 接口。</li>\n<li><strong>SoundTest.class</strong>：主类 <code>SoundTest</code> 的编译结果，包含 <code>main</code> 方法并用于运行程序。</li>\n</ol>\n<p> (b) 运行程序观察结果<br>运行程序后，控制台将提示用户选择设备，程序将根据用户的选择发出对应的声音并调整音量。以下是一个可能的运行示例：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">请选择设备</span> <span class=\"string\">(1:</span> <span class=\"string\">收音机,</span> <span class=\"attr\">2:</span> <span class=\"string\">随身听,</span> <span class=\"attr\">3:</span> <span class=\"string\">手机,</span> <span class=\"attr\">4:</span> <span class=\"string\">闹钟):</span> </span><br><span class=\"line\"><span class=\"number\">2</span></span><br><span class=\"line\"><span class=\"string\">随身听正在播放音乐...</span></span><br><span class=\"line\"><span class=\"string\">请输入音量(1-10):</span> <span class=\"number\">7</span></span><br><span class=\"line\"><span class=\"string\">随身听音量调节为:</span> <span class=\"number\">7</span></span><br></pre></td></tr></table></figure>\n<p><strong>观察结果</strong>：</p>\n<ul>\n<li>程序根据用户输入的设备类型调用相应的 <code>makeSound()</code> 方法，输出不同的音效信息。</li>\n<li>用户输入的音量级别被传递给 <code>adjustVolume()</code> 方法，并显示相应的音量调整信息。</li>\n</ul>\n<p> (c) 增加 <code>Clock</code> 类并记录结果<br>假设 <code>Clock</code> 类的代码如下：</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Clock</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Soundable</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">int</span> volume;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">makeSound</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;闹钟发出滴答声...&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">adjustVolume</span><span class=\"params\">(<span class=\"type\">int</span> level)</span> &#123;</span><br><span class=\"line\">        volume = level;</span><br><span class=\"line\">        System.out.println(<span class=\"string\">&quot;闹钟音量调节为: &quot;</span> + volume);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>运行结果：</p>\n<figure class=\"highlight yaml\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"string\">请选择设备</span> <span class=\"string\">(1:</span> <span class=\"string\">收音机,</span> <span class=\"attr\">2:</span> <span class=\"string\">随身听,</span> <span class=\"attr\">3:</span> <span class=\"string\">手机,</span> <span class=\"attr\">4:</span> <span class=\"string\">闹钟):</span> </span><br><span class=\"line\"><span class=\"number\">4</span></span><br><span class=\"line\"><span class=\"string\">闹钟发出滴答声...</span></span><br><span class=\"line\"><span class=\"string\">请输入音量(1-10):</span> <span class=\"number\">3</span></span><br><span class=\"line\"><span class=\"string\">闹钟音量调节为:</span> <span class=\"number\">3</span></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"附加题\"><a href=\"#附加题\" class=\"headerlink\" title=\"附加题\"></a>附加题</h2><p>题目：现在请模仿本实验的程序设计出一个自己的接口程序，要求先设计一个moveable 可移动接口，然后分别设计 3 个线程 , 即汽车 Car 、轮船 Ship 、飞机Aircraft 来实现该接口，在测试类中可以创建多个线程，启用线程完成各自的工作（用不同的方式创建这些线程。</p>\n<h3 id=\"Moveable-接口\"><a href=\"#Moveable-接口\" class=\"headerlink\" title=\"Moveable 接口\"></a><code>Moveable</code> 接口</h3><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">interface</span> <span class=\"title class_\">Moveable</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">void</span> <span class=\"title function_\">move</span><span class=\"params\">()</span>; <span class=\"comment\">// 定义一个方法，用于实现移动的对象</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Car-类\"><a href=\"#Car-类\" class=\"headerlink\" title=\"Car 类\"></a><code>Car</code> 类</h3><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Car</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Thread</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Moveable</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Car</span><span class=\"params\">(String name)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.name = name; <span class=\"comment\">// 通过构造函数传入汽车名称</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">move</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(name + <span class=\"string\">&quot; 正在公路上行驶。&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        move(); <span class=\"comment\">// 调用 move 方法</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Ship-类\"><a href=\"#Ship-类\" class=\"headerlink\" title=\"Ship 类\"></a><code>Ship</code> 类</h3><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Ship</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Thread</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Moveable</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Ship</span><span class=\"params\">(String name)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.name = name; <span class=\"comment\">// 通过构造函数传入轮船名称</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">move</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(name + <span class=\"string\">&quot; 正在海上航行。&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        move(); <span class=\"comment\">// 调用 move 方法</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"Aircraft-类\"><a href=\"#Aircraft-类\" class=\"headerlink\" title=\"Aircraft 类\"></a><code>Aircraft</code> 类</h3><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">Aircraft</span> <span class=\"keyword\">extends</span> <span class=\"title class_\">Thread</span> <span class=\"keyword\">implements</span> <span class=\"title class_\">Moveable</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> String name;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">Aircraft</span><span class=\"params\">(String name)</span> &#123;</span><br><span class=\"line\">        <span class=\"built_in\">this</span>.name = name; <span class=\"comment\">// 通过构造函数传入飞机名称</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">move</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(name + <span class=\"string\">&quot; 正在天空中飞行。&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"meta\">@Override</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">run</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        move(); <span class=\"comment\">// 调用 move 方法</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"TestMoveable-测试类\"><a href=\"#TestMoveable-测试类\" class=\"headerlink\" title=\"TestMoveable 测试类\"></a>TestMoveable 测试类</h3><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">TestMoveable</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> &#123;</span><br><span class=\"line\">        <span class=\"comment\">// 创建汽车、轮船和飞机的实例</span></span><br><span class=\"line\">        <span class=\"type\">Car</span> <span class=\"variable\">car1</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Car</span>(<span class=\"string\">&quot;汽车 1&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">Car</span> <span class=\"variable\">car2</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Car</span>(<span class=\"string\">&quot;汽车 2&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">Ship</span> <span class=\"variable\">ship1</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Ship</span>(<span class=\"string\">&quot;轮船 1&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">Aircraft</span> <span class=\"variable\">aircraft1</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">Aircraft</span>(<span class=\"string\">&quot;飞机 1&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"comment\">// 启动线程</span></span><br><span class=\"line\">        car1.start();</span><br><span class=\"line\">        car2.start();</span><br><span class=\"line\">        ship1.start();</span><br><span class=\"line\">        aircraft1.start();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"思考题\"><a href=\"#思考题\" class=\"headerlink\" title=\"思考题\"></a>思考题</h2><table>\n<thead>\n<tr>\n<th><strong>问题</strong></th>\n<th><strong>答案</strong></th>\n</tr>\n</thead>\n<tbody><tr>\n<td><strong>接口与抽象类的区别是什么？</strong></td>\n<td><strong>接口</strong>：只声明方法签名，不提供实现；支持多继承，一个类可以实现多个接口。<br><strong>抽象类</strong>：可以包含已实现的方法和属性；只支持单继承。</td>\n</tr>\n<tr>\n<td><strong>如何创建线程？有几种方法？</strong></td>\n<td><strong>方法 1</strong>：继承 <code>Thread</code> 类并重写 <code>run()</code> 方法，调用 <code>start()</code> 启动线程。<br><strong>方法 2</strong>：实现 <code>Runnable</code> 接口，将实例传给 <code>Thread</code> 构造器。</td>\n</tr>\n</tbody></table>\n<p>（2024.10.25）</p>\n","tags":["实验","java"]},{"title":"数据库实验","url":"/2024/10/24/%E6%95%B0%E6%8D%AE%E5%BA%93%E5%AE%9E%E9%AA%8C/","content":"<!--toc-->\n\n<h1 id=\"实验一：创建库表\"><a href=\"#实验一：创建库表\" class=\"headerlink\" title=\"实验一：创建库表\"></a>实验一：创建库表</h1><h3 id=\"一、实验内容\"><a href=\"#一、实验内容\" class=\"headerlink\" title=\"一、实验内容\"></a>一、实验内容</h3><p>1 熟悉SQL Server的软件环境，了解SQL Server的功能</p>\n<p>2 查看示例数据库对象。</p>\n<p>3 创建STUDENT数据库，根据学生信息、课程信息和选修信息设计学生关系、课程关系 、选课关系，并创建对应的基本表student 、course 、 SC </p>\n<h3 id=\"二、实验步骤\"><a href=\"#二、实验步骤\" class=\"headerlink\" title=\"二、实验步骤\"></a>二、实验步骤</h3><ol>\n<li><p>登录SQL Server数据库管理系统</p>\n</li>\n<li><p>熟悉SQL Server的操作环境，熟悉SQL Server支持的数据对象</p>\n</li>\n<li><p>根据需求设计学生数据库student，并创建</p>\n</li>\n<li><p>根据需求设计学生数据库的基本表student 、course 、 SC；</p>\n</li>\n<li><p>基本表录入数据；</p>\n</li>\n</ol>\n<h3 id=\"三、思考题\"><a href=\"#三、思考题\" class=\"headerlink\" title=\"三、思考题\"></a>三、思考题</h3><p>1、SQL Server 数据库管理系统有哪些版本？你了解最新的SQL Server产品吗？还有哪些著名的大型数据库管理系统软件？</p>\n<p>2、SQL Server 数据库管理系统的主要功能有那些？</p>\n<h3 id=\"四、实验报告\"><a href=\"#四、实验报告\" class=\"headerlink\" title=\"四、实验报告\"></a>四、实验报告</h3><p>对于本实验的具体内容应该包括实验预习、实验记录和实验报告三部分。其中实验预习主要按照思考题的两个问题来完成；实验记录主要包括创建库、表的两种过程；实验报告的内容及具体要求主要格式按照实验报告本上的内容要求来写。</p>\n<h2 id=\"1-创建数据库-STUDENT\"><a href=\"#1-创建数据库-STUDENT\" class=\"headerlink\" title=\"1. 创建数据库 STUDENT\"></a>1. 创建数据库 STUDENT</h2><p>点击数据库，右击</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/totogo7/totogo7.github.io/img/202411071559746.png\" alt=\"image-20241023205226055\"></p>\n<p>新建数据库，输入库名</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/totogo7/totogo7.github.io/img/202411071559642.png\" alt=\"image-20241023205308267\"></p>\n<h2 id=\"2-创建Student表\"><a href=\"#2-创建Student表\" class=\"headerlink\" title=\"2. 创建Student表\"></a>2. 创建Student表</h2><p>通过库直接建表：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/totogo7/totogo7.github.io/img/202411071559094.png\" alt=\"image-20241023205358469\">)</p>\n<p>或者可以通过命令行：</p>\n<p>点击新建查询，输入以下内容</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/totogo7/totogo7.github.io/img/202411071600194.png\" alt=\"image-20241023205452083\"></p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> Student(</span><br><span class=\"line\">Sno <span class=\"type\">CHAR</span>(<span class=\"number\">9</span>) <span class=\"keyword\">PRIMARY</span> KEY,</span><br><span class=\"line\">Sname <span class=\"type\">CHAR</span>(<span class=\"number\">20</span>) <span class=\"keyword\">UNIQUE</span>,</span><br><span class=\"line\">Ssex <span class=\"type\">CHAR</span>(<span class=\"number\">2</span>),</span><br><span class=\"line\">Sage <span class=\"type\">SMALLINT</span>,</span><br><span class=\"line\">Sdept <span class=\"type\">CHAR</span>(<span class=\"number\">20</span>)</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<p>输入数据，右键对应的表，编辑前200行：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/totogo7/totogo7.github.io/img/202411071600962.png\" alt=\"image-20241023205628386\"></p>\n<p>按行输入数据：</p>\n<p><img src=\"https://cdn.jsdelivr.net/gh/totogo7/totogo7.github.io/img/202411071600122.png\" alt=\"image-20241023205711197\"></p>\n<p>或者命令行输入数据：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> Student (Sno, Sname, Ssex, Sage, Sdept)</span><br><span class=\"line\"><span class=\"keyword\">VALUES</span></span><br><span class=\"line\">(<span class=\"string\">&#x27;201215121&#x27;</span>, <span class=\"string\">&#x27;李勇&#x27;</span>, <span class=\"string\">&#x27;男&#x27;</span>, <span class=\"number\">20</span>, <span class=\"string\">&#x27;CS&#x27;</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;201215122&#x27;</span>, <span class=\"string\">&#x27;刘晨&#x27;</span>, <span class=\"string\">&#x27;女&#x27;</span>, <span class=\"number\">19</span>, <span class=\"string\">&#x27;CS&#x27;</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;201215123&#x27;</span>, <span class=\"string\">&#x27;王敏&#x27;</span>, <span class=\"string\">&#x27;女&#x27;</span>, <span class=\"number\">18</span>, <span class=\"string\">&#x27;MA&#x27;</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;201215125&#x27;</span>, <span class=\"string\">&#x27;张立&#x27;</span>, <span class=\"string\">&#x27;男&#x27;</span>, <span class=\"number\">19</span>, <span class=\"string\">&#x27;IS&#x27;</span>);</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/totogo7/totogo7.github.io/img/202411071600662.png\" alt=\"image-20241023211145971\"></p>\n<h2 id=\"3-建立Course表\"><a href=\"#3-建立Course表\" class=\"headerlink\" title=\"3. 建立Course表\"></a>3. 建立Course表</h2><p>用命令行：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> Course (</span><br><span class=\"line\">    Cno <span class=\"type\">VARCHAR</span>(<span class=\"number\">4</span>) <span class=\"keyword\">PRIMARY</span> KEY,</span><br><span class=\"line\">    Cname <span class=\"type\">VARCHAR</span>(<span class=\"number\">40</span>) <span class=\"keyword\">NOT</span> <span class=\"keyword\">NULL</span>,</span><br><span class=\"line\">    Cpno <span class=\"type\">VARCHAR</span>(<span class=\"number\">4</span>),</span><br><span class=\"line\">    Ccredit <span class=\"type\">SMALLINT</span></span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<p>然后再使用命令行：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">USE STUDENT</span><br><span class=\"line\">GO</span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> Course </span><br><span class=\"line\"><span class=\"keyword\">ADD</span> <span class=\"keyword\">CONSTRAINT</span> FK_Sn <span class=\"keyword\">FOREIGN</span> KEY(Cpno) <span class=\"keyword\">REFERENCES</span> Course(Cno) </span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<p>这一步是在 <code>Course</code> 表中添加一个外键约束，<code>Cpno</code> 列现在被定义为引用 <code>Course</code> 表中 <code>Cno</code> 列的外键。这意味着 <code>Course.Cpno</code> 中的值必须在 <code>Course.Cno</code> 列中存在，确保了数据的完整性。</p>\n<p><code>Cpno</code> 是某个课程的前置课程编号，<code>Cno</code> 是课程编号，这个外键约束可以确保前置课程必须存在于 <code>Course</code> 表中。</p>\n</blockquote>\n<p>输入数据：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> Course (Cno, Cname, Cpno, Ccredit) </span><br><span class=\"line\"><span class=\"keyword\">VALUES</span> </span><br><span class=\"line\">(<span class=\"string\">&#x27;1&#x27;</span>, <span class=\"string\">&#x27;数据库&#x27;</span>, <span class=\"keyword\">NULL</span>, <span class=\"number\">5</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;2&#x27;</span>, <span class=\"string\">&#x27;数学&#x27;</span>, <span class=\"keyword\">NULL</span>, <span class=\"number\">2</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;3&#x27;</span>, <span class=\"string\">&#x27;信息系统&#x27;</span>, <span class=\"string\">&#x27;1&#x27;</span>, <span class=\"number\">4</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;4&#x27;</span>, <span class=\"string\">&#x27;操作系统&#x27;</span>, <span class=\"string\">&#x27;6&#x27;</span>, <span class=\"number\">3</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;5&#x27;</span>, <span class=\"string\">&#x27;数据结构&#x27;</span>, <span class=\"string\">&#x27;7&#x27;</span>, <span class=\"number\">4</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;6&#x27;</span>, <span class=\"string\">&#x27;数据处理&#x27;</span>, <span class=\"keyword\">NULL</span>, <span class=\"number\">2</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;7&#x27;</span>, <span class=\"string\">&#x27;PASCAL语言&#x27;</span>,<span class=\"string\">&#x27;6&#x27;</span>, <span class=\"number\">4</span>);</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"4-建立SC表\"><a href=\"#4-建立SC表\" class=\"headerlink\" title=\"4. 建立SC表\"></a>4. 建立SC表</h2><p>使用命令行：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">TABLE</span> SC(</span><br><span class=\"line\">Sno <span class=\"type\">CHAR</span>(<span class=\"number\">9</span>),</span><br><span class=\"line\">Cno <span class=\"type\">varCHAR</span>(<span class=\"number\">4</span>),</span><br><span class=\"line\">Grade <span class=\"type\">SMALLINT</span>,</span><br><span class=\"line\"><span class=\"keyword\">PRIMARY</span> KEY(Sno,Cno)</span><br><span class=\"line\">);</span><br></pre></td></tr></table></figure>\n\n<p>然后添加约束：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">USE STUDENT;</span><br><span class=\"line\">GO</span><br><span class=\"line\"><span class=\"comment\">-- 添加外键约束 FK_Sno，引用 Student(Sno)</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> SC </span><br><span class=\"line\"><span class=\"keyword\">ADD</span> <span class=\"keyword\">CONSTRAINT</span> FK_Sno <span class=\"keyword\">FOREIGN</span> KEY(Sno) <span class=\"keyword\">REFERENCES</span> Student(Sno);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">-- 添加外键约束 FK_Cno，引用 Course(Cno)</span></span><br><span class=\"line\"><span class=\"keyword\">ALTER</span> <span class=\"keyword\">TABLE</span> SC </span><br><span class=\"line\"><span class=\"keyword\">ADD</span> <span class=\"keyword\">CONSTRAINT</span> FK_Cno <span class=\"keyword\">FOREIGN</span> KEY(Cno) <span class=\"keyword\">REFERENCES</span> Course(Cno);</span><br></pre></td></tr></table></figure>\n\n<blockquote>\n<ul>\n<li><strong><code>REFERENCES Student(Sno)</code></strong>: 表示 <code>SC</code> 表中的 <code>Sno</code> 外键引用了 <code>Student</code> 表中的 <code>Sno</code> 列，要求 <code>SC</code> 表中插入的每个 <code>Sno</code> 值必须在 <code>Student</code> 表中存在。换句话说，如果在 <code>Student</code> 表中没有对应的 <code>Sno</code>，就无法将该值插入到 <code>SC</code> 表。</li>\n<li><strong><code>REFERENCES Student(Cno)</code></strong>: 确保 <code>SC</code> 表中的 <code>Cno</code>（课程编号）必须是 <code>Course</code> 表中的有效课程编号。</li>\n</ul>\n</blockquote>\n<p>输入数据：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">INSERT</span> <span class=\"keyword\">INTO</span> SC (Sno, Cno, Grade) </span><br><span class=\"line\"><span class=\"keyword\">VALUES</span> </span><br><span class=\"line\">(<span class=\"string\">&#x27;201215122&#x27;</span>, <span class=\"string\">&#x27;2&#x27;</span>, <span class=\"number\">90</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;201215121&#x27;</span>, <span class=\"string\">&#x27;1&#x27;</span>, <span class=\"number\">92</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;201215121&#x27;</span>, <span class=\"string\">&#x27;2&#x27;</span>, <span class=\"number\">85</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;201215121&#x27;</span>, <span class=\"string\">&#x27;3&#x27;</span>, <span class=\"number\">88</span>),</span><br><span class=\"line\">(<span class=\"string\">&#x27;201215122&#x27;</span>, <span class=\"string\">&#x27;3&#x27;</span>, <span class=\"number\">80</span>);</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"思考题\"><a href=\"#思考题\" class=\"headerlink\" title=\"思考题\"></a>思考题</h2><p>1、<strong>SQL Server 数据库管理系统的版本</strong>：</p>\n<ul>\n<li><strong>主要版本</strong>：Enterprise、Standard、Web、Express、Developer。</li>\n<li><strong>最新版本</strong>：SQL Server 2022，集成 Azure、改进性能和安全性。</li>\n<li><strong>其他大型数据库管理系统</strong>：Oracle、MySQL、PostgreSQL、IBM Db2、MongoDB。</li>\n</ul>\n<p> 2、<strong>SQL Server 的主要功能</strong>：</p>\n<ul>\n<li><strong>数据存储与管理</strong>：关系型数据管理、表和索引创建。</li>\n<li><strong>查询与分析</strong>：T-SQL 查询语言和查询优化。</li>\n<li><strong>事务与并发控制</strong>：支持 ACID 事务和并发控制。</li>\n<li><strong>数据安全</strong>：加密、权限管理和安全认证。</li>\n<li><strong>高可用性</strong>：Always On、备份与恢复。</li>\n<li><strong>数据集成</strong>：ETL、云数据同步。</li>\n<li><strong>性能监控</strong>：工具优化和性能监控。</li>\n</ul>\n<p>（time：2024.10.23）</p>\n<hr>\n<h1 id=\"实验二：SQL语言使用\"><a href=\"#实验二：SQL语言使用\" class=\"headerlink\" title=\"实验二：SQL语言使用\"></a>实验二：SQL语言使用</h1><h3 id=\"一、实验内容-1\"><a href=\"#一、实验内容-1\" class=\"headerlink\" title=\"一、实验内容\"></a>一、实验内容</h3><p>第一部分：</p>\n<p>1 使用上次实验创建的数据库和表，利用企业管理器或查询分析器向基本表中插入实验数据。</p>\n<p>第二部分：</p>\n<p>2 查询全体学生学号和姓名</p>\n<p>3 查询全体学生学号、姓名、性别、年龄和所在系</p>\n<p>4 查询全体学生选课情况，即学号、课程号、成绩</p>\n<p>5 显示所有选课学生的学号，并取掉重复行</p>\n<p>6 查询成绩大于80分的学生的学号、课程号、成绩</p>\n<p>7 查询计算机系全体学生的学号</p>\n<p>8 查询计算机系年龄在18岁以上的学生的学号、姓名</p>\n<p>9 查询选修了数据库课程或数据结构课程学生的学号、成绩</p>\n<p>10 查询选修了C1课程的学生的学号和成绩，查询结果按成绩降序排序</p>\n<p>11 查询每个学生的学号、姓名、选修的课程名、成绩</p>\n<p>12 查询与‘李勇’在同一个系学习的学生学号、姓名</p>\n<p>13 查询选修了3门以上课程的学生学号</p>\n<p>14 查询没有选修课程的学生的基本信息</p>\n<p>15 找出平均成绩在85分以上的学生，结果按系分组，并按平均成绩的升序排列</p>\n<p>16查询选修课程平均成绩在80分以上的学生学号</p>\n<p>17查询数据结构课程的先行课的先行课课程名</p>\n<p>18 查询同时选修《数据库》和《数据结构》两门课程的学生姓名</p>\n<p>19 查询每个系的平均年龄，并建立视图</p>\n<p>20 建立课程的先修课程的视图</p>\n<h3 id=\"二、思考题\"><a href=\"#二、思考题\" class=\"headerlink\" title=\"二、思考题\"></a>二、思考题</h3><p>1、对于实验任务的完成，SQL Server 提供了哪些方法或工具？</p>\n<p>2、请考虑SQL Server 的企业管理器和查询分析器中用SQL语句两种方法完成任务的场合和优缺点。</p>\n<hr>\n<h2 id=\"题目1\"><a href=\"#题目1\" class=\"headerlink\" title=\"题目1\"></a>题目1</h2><p>1 使用上次实验创建的数据库和表，利用企业管理器或查询分析器向基本表中插入实验数据。</p>\n<p>第二部分：</p>\n<h2 id=\"题目2\"><a href=\"#题目2\" class=\"headerlink\" title=\"题目2\"></a>题目2</h2><p>2 查询全体学生学号和姓名</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sno, Sname</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Student;</span><br></pre></td></tr></table></figure>\n\n\n<p>3 查询全体学生学号、姓名、性别、年龄和所在系</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sno, Sname, Ssex, Sage, Sdept</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Student;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"题目4\"><a href=\"#题目4\" class=\"headerlink\" title=\"题目4\"></a>题目4</h2><p>4 查询全体学生选课情况，即学号、课程号、成绩 </p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sno, Cno, Grade</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> SC; </span><br></pre></td></tr></table></figure>\n\n<h2 id=\"题目5\"><a href=\"#题目5\" class=\"headerlink\" title=\"题目5\"></a>题目5</h2><p>5 显示所有选课学生的学号，并取掉重复行</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"keyword\">DISTINCT</span> Sno</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> SC;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"题目6\"><a href=\"#题目6\" class=\"headerlink\" title=\"题目6\"></a>题目6</h2><p>6 查询成绩大于80分的学生的学号、课程号、成绩</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sno, Cno, Grade</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> SC</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> Grade <span class=\"operator\">&gt;</span> <span class=\"number\">80</span>;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"题目7\"><a href=\"#题目7\" class=\"headerlink\" title=\"题目7\"></a>题目7</h2><p>7 查询计算机系全体学生的学号</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sno</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Student</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> Sdept <span class=\"operator\">=</span> <span class=\"string\">&#x27;CS&#x27;</span>;   <span class=\"comment\">--单引号</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"题目8\"><a href=\"#题目8\" class=\"headerlink\" title=\"题目8\"></a>题目8</h2><p>8 查询计算机系年龄在18岁以上的学生的学号、姓名</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sno, Sname</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Student</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> Sdept <span class=\"operator\">=</span> <span class=\"string\">&#x27;CS&#x27;</span> <span class=\"keyword\">AND</span> Sage <span class=\"operator\">&gt;</span> <span class=\"number\">18</span>;  <span class=\"comment\">--用AND</span></span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"题目9\"><a href=\"#题目9\" class=\"headerlink\" title=\"题目9\"></a>题目9</h2><p>9 查询选修了数据库课程或数据结构课程学生的学号、成绩</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sno, Grade</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> SC</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> Cno <span class=\"operator\">=</span> <span class=\"string\">&#x27;1&#x27;</span> <span class=\"keyword\">OR</span> Cno <span class=\"operator\">=</span> <span class=\"string\">&#x27;5&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"题目10\"><a href=\"#题目10\" class=\"headerlink\" title=\"题目10\"></a>题目10</h2><p>10 查询选修了C1课程的学生的学号和成绩，查询结果按成绩降序排序</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sno, Grade</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> SC</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> Cno <span class=\"operator\">=</span> <span class=\"string\">&#x27;1&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> Grade <span class=\"keyword\">DESC</span>;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"题目11\"><a href=\"#题目11\" class=\"headerlink\" title=\"题目11\"></a>题目11</h2><p>11 查询每个学生的学号、姓名、选修的课程名、成绩</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Student.Sno, Student.Sname, Course.Cname, SC.Grade</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Student</span><br><span class=\"line\"><span class=\"keyword\">JOIN</span> SC <span class=\"keyword\">ON</span> Student.Sno <span class=\"operator\">=</span> SC.Sno</span><br><span class=\"line\"><span class=\"keyword\">JOIN</span> Course <span class=\"keyword\">ON</span> SC.Cno <span class=\"operator\">=</span> Course.Cno;</span><br></pre></td></tr></table></figure>\n\n<p>看了一下书，书上是用where语句，并没有用join</p>\n<p>按照书上可以这样写：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Student.Sno, Student.Sname, Course.Cname, SC.Grade</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Student, SC, Course</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> Student.Sno <span class=\"operator\">=</span> SC.Sno</span><br><span class=\"line\">  <span class=\"keyword\">AND</span> SC.Cno <span class=\"operator\">=</span> Course.Cno;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"题目12\"><a href=\"#题目12\" class=\"headerlink\" title=\"题目12\"></a>题目12</h2><p>12 查询与‘李勇’在同一个系学习的学生学号、姓名</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sno, Sname</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Student</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> Sdept <span class=\"operator\">=</span> (<span class=\"keyword\">SELECT</span> Sdept <span class=\"keyword\">FROM</span> Student <span class=\"keyword\">WHERE</span> Sname <span class=\"operator\">=</span> <span class=\"string\">&#x27;李勇&#x27;</span>)</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"题目13\"><a href=\"#题目13\" class=\"headerlink\" title=\"题目13\"></a>题目13</h2><p>13 查询选修了3门以上课程的学生学号</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sno</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> SC</span><br><span class=\"line\"><span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> Sno <span class=\"operator\">/</span><span class=\"operator\">/</span>根据学号进行分组</span><br><span class=\"line\"><span class=\"keyword\">HAVING</span> <span class=\"built_in\">COUNT</span>(Cno) <span class=\"operator\">&gt;</span> <span class=\"number\">3</span>; <span class=\"operator\">/</span><span class=\"operator\">/</span>筛选学号中满足特定条件的组</span><br></pre></td></tr></table></figure>\n<p><code>HAVING</code> 子句用于 <strong>过滤分组后的数据</strong>，通常和 <code>GROUP BY</code> 子句一起使用。它的作用类似于 <code>WHERE</code>，但不同之处在于：</p>\n<ul>\n<li><code>WHERE</code> 子句用于在 <strong>分组之前</strong> 对数据进行过滤。</li>\n<li><code>HAVING</code> 子句用于在 <strong>分组之后</strong> 对分组结果进行过滤。</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th><strong>对比维度</strong></th>\n<th><strong>GROUP BY</strong></th>\n<th><strong>ORDER BY</strong></th>\n</tr>\n</thead>\n<tbody><tr>\n<td><strong>作用</strong></td>\n<td>对查询结果按指定列进行<strong>分组</strong>。</td>\n<td>对查询结果按指定列进行<strong>排序</strong>。</td>\n</tr>\n<tr>\n<td><strong>常用场景</strong></td>\n<td>与聚合函数一起使用，如 <code>COUNT()</code>、<code>SUM()</code>、<code>AVG()</code> 等。</td>\n<td>用于控制查询结果集的显示顺序。</td>\n</tr>\n<tr>\n<td><strong>是否影响结果内容</strong></td>\n<td><strong>是</strong>，对结果进行分组后，每组只返回一条汇总数据。</td>\n<td><strong>否</strong>，不改变结果内容，只改变结果的顺序。</td>\n</tr>\n<tr>\n<td><strong>常用子句&#x2F;函数</strong></td>\n<td>常与 <code>HAVING</code> 和聚合函数（如 <code>SUM()</code>、<code>COUNT()</code>）结合使用。</td>\n<td>常与 <code>ASC</code>（升序）、<code>DESC</code>（降序）结合使用。</td>\n</tr>\n<tr>\n<td><strong>位置</strong></td>\n<td>位于 <code>SELECT</code> 之后，<code>ORDER BY</code> 之前。</td>\n<td>通常是查询语句的最后一个子句。</td>\n</tr>\n<tr>\n<td><strong>示例</strong></td>\n<td><code>sql SELECT Sdept, AVG(Sage) FROM Student GROUP BY Sdept; </code></td>\n<td><code>sql SELECT Sname, Sage FROM Student ORDER BY Sage DESC; </code></td>\n</tr>\n<tr>\n<td><strong>应用的列</strong></td>\n<td>必须是 <code>SELECT</code> 中未聚合的列或计算结果。</td>\n<td>可以是任意列或表达式，即使它不在 <code>SELECT</code> 中出现。</td>\n</tr>\n</tbody></table>\n<ul>\n<li><strong><code>GROUP BY</code></strong> 用于对数据进行分组，并计算每个分组的汇总信息。</li>\n<li><strong><code>ORDER BY</code></strong> 用于对查询结果进行排序，不改变数据，只改变结果的排列顺序。</li>\n</ul>\n<h2 id=\"题目14\"><a href=\"#题目14\" class=\"headerlink\" title=\"题目14\"></a>题目14</h2><p>14 查询没有选修课程的学生的基本信息</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span></span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Student</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> Sno <span class=\"keyword\">NOT</span> <span class=\"keyword\">IN</span> (<span class=\"keyword\">SELECT</span> Sno <span class=\"keyword\">FROM</span> SC);</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"题目15\"><a href=\"#题目15\" class=\"headerlink\" title=\"题目15\"></a>题目15</h2><p>15 找出平均成绩在85分以上的学生，结果按系分组，并按平均成绩的升序排列</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Student.Sdept, Student.Sno, <span class=\"built_in\">AVG</span>(SC.Grade) <span class=\"keyword\">AS</span> AvgGrade</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Student</span><br><span class=\"line\"><span class=\"keyword\">JOIN</span> SC <span class=\"keyword\">ON</span> Student.Sno <span class=\"operator\">=</span> SC.Sno</span><br><span class=\"line\"><span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> Student.Sdept, Student.Sno </span><br><span class=\"line\"><span class=\"comment\">--根据学生的系别（`Sdept`）和学号（`Sno`）对结果进行分组。</span></span><br><span class=\"line\"><span class=\"keyword\">HAVING</span> <span class=\"built_in\">AVG</span>(SC.Grade) <span class=\"operator\">&gt;</span> <span class=\"number\">85</span></span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> AvgGrade <span class=\"keyword\">ASC</span>;</span><br></pre></td></tr></table></figure>\n<p>&#x2F;&#x2F;**<code>AVG(SC.Grade) AS AvgGrade</code>**：计算每个学生的平均成绩，并将结果命名为 <code>AvgGrade</code>。</p>\n<ul>\n<li>使用 <code>JOIN</code> 关键字将 <code>Student</code> 表和 <code>SC</code> 表连接在一起。</li>\n<li><code>ON Student.Sno = SC.Sno</code>：指定连接条件，即通过学号（<code>Sno</code>）将两张表关联起来。这样可以获取每个学生的成绩信息。</li>\n</ul>\n<p>用where语句：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Student.Sdept, Student.Sno, <span class=\"built_in\">AVG</span>(SC.Grade) <span class=\"keyword\">AS</span> AvgGrade</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Student, SC </span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> Student.Sno <span class=\"operator\">=</span> SC.Sno</span><br><span class=\"line\"><span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> Student.Sdept, Student.Sno </span><br><span class=\"line\"><span class=\"keyword\">HAVING</span> <span class=\"built_in\">AVG</span>(SC.Grade) <span class=\"operator\">&gt;</span> <span class=\"number\">85</span></span><br><span class=\"line\"><span class=\"keyword\">ORDER</span> <span class=\"keyword\">BY</span> AvgGrade <span class=\"keyword\">ASC</span>;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"题目16\"><a href=\"#题目16\" class=\"headerlink\" title=\"题目16\"></a>题目16</h2><p>16 查询选修课程平均成绩在80分以上的学生学号</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sno</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> SC</span><br><span class=\"line\"><span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> Sno</span><br><span class=\"line\"><span class=\"keyword\">HAVING</span> <span class=\"built_in\">AVG</span>(Grade) <span class=\"operator\">&gt;</span> <span class=\"number\">80</span>;</span><br></pre></td></tr></table></figure>\n\n\n<h2 id=\"题目17\"><a href=\"#题目17\" class=\"headerlink\" title=\"题目17\"></a>题目17</h2><p>17查询数据结构课程的先行课的先行课课程名</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> C2.Cname <span class=\"keyword\">AS</span> PrePreCourse</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Course C1  <span class=\"operator\">/</span><span class=\"operator\">/</span>指定数据源为 `Course` 表，并给它一个别名 `C1`。这个别名用于后续的引用</span><br><span class=\"line\"><span class=\"keyword\">JOIN</span> Course C2 <span class=\"keyword\">ON</span> C1.Cpno <span class=\"operator\">=</span> C2.Cno</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> C1.Cno <span class=\"operator\">=</span> <span class=\"string\">&#x27;5&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<ul>\n<li><p><code>JOIN</code> 允许我们把 <code>Course C1</code> 和 <code>Course C2</code> 的相关信息组合起来，这样我们就能从查询到的结果中返回前置课程的名称，而不是编号。</p>\n</li>\n<li><p>最终，我们根据 <code>C1.Cno = &#39;5&#39;</code> 的条件，查询编号为 <code>5</code> 的课程的前置课程，并通过 <code>JOIN</code> 得到前置课程的名称。</p>\n<p>用where语句：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> C2.Cname <span class=\"keyword\">AS</span> PrePreCourse</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Course C1, Course C2</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> C1.Cpno <span class=\"operator\">=</span> C2.Cno</span><br><span class=\"line\">  <span class=\"keyword\">AND</span> C1.Cno <span class=\"operator\">=</span> <span class=\"string\">&#x27;5&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://cdn.jsdelivr.net/gh/totogo7/totogo7.github.io/img/202410251721435.png\" alt=\"{2831229C-D56E-4AB2-8C98-19AE38633DCC}\"></p>\n</li>\n</ul>\n<h2 id=\"题目18\"><a href=\"#题目18\" class=\"headerlink\" title=\"题目18\"></a>题目18</h2><p>18 查询同时选修《数据库》和《数据结构》两门课程的学生姓名</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sname </span><br><span class=\"line\"><span class=\"keyword\">FROM</span> SC <span class=\"keyword\">AS</span> SC1</span><br><span class=\"line\"><span class=\"keyword\">JOIN</span> SC <span class=\"keyword\">AS</span> SC2 <span class=\"keyword\">ON</span> SC1.Sno <span class=\"operator\">=</span> SC2.Sno</span><br><span class=\"line\"><span class=\"keyword\">JOIN</span> Student  <span class=\"keyword\">ON</span> SC1.Sno <span class=\"operator\">=</span> Student.Sno</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> SC1.Cno <span class=\"operator\">=</span> <span class=\"string\">&#x27;1&#x27;</span> <span class=\"keyword\">AND</span> SC2.Cno <span class=\"operator\">=</span> <span class=\"string\">&#x27;5&#x27;</span>;</span><br></pre></td></tr></table></figure>\n<p> <code>JOIN SC AS SC2 ON SC1.Sno = SC2.Sno</code>：</p>\n<ul>\n<li>通过这个 <code>JOIN</code>，我们确保 <code>SC1</code> 和 <code>SC2</code> 中的 <code>Sno</code>（学生编号）是相同的，表示同一个学生。</li>\n</ul>\n<p> <code>JOIN Student ON SC1.Sno=Student.Sno </code>：</p>\n<ul>\n<li>在这一步，我们将 <code>SC</code> 表和 <code>Student</code> 表连接起来，关联 <code>SC1.Sno</code> 和 <code>Student</code> 表中的 <code>Sno</code>。</li>\n</ul>\n<p>用where语句：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> Sname</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> SC <span class=\"keyword\">AS</span> SC1, SC <span class=\"keyword\">AS</span> SC2, Student</span><br><span class=\"line\"><span class=\"keyword\">WHERE</span> SC1.Sno <span class=\"operator\">=</span> SC2.Sno</span><br><span class=\"line\">  <span class=\"keyword\">AND</span> SC1.Sno <span class=\"operator\">=</span> Student.Sno</span><br><span class=\"line\">  <span class=\"keyword\">AND</span> SC1.Cno <span class=\"operator\">=</span> <span class=\"string\">&#x27;1&#x27;</span></span><br><span class=\"line\">  <span class=\"keyword\">AND</span> SC2.Cno <span class=\"operator\">=</span> <span class=\"string\">&#x27;5&#x27;</span>;</span><br></pre></td></tr></table></figure>\n\n\n\n<h2 id=\"题目19\"><a href=\"#题目19\" class=\"headerlink\" title=\"题目19\"></a>题目19</h2><p>19 查询每个系的平均年龄，并建立视图</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">VIEW</span> AvgAgeByDept <span class=\"keyword\">AS</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> Sdept, <span class=\"built_in\">AVG</span>(Sage) <span class=\"keyword\">AS</span> AvgAge</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Student</span><br><span class=\"line\"><span class=\"keyword\">GROUP</span> <span class=\"keyword\">BY</span> Sdept;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>GREATE VIEW创建视图，后面是自定义的名称，AS表示后面讲定义这个视图的查询内容<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> AvgAgeByDept;</span><br></pre></td></tr></table></figure></li>\n</ul>\n<h2 id=\"题目20\"><a href=\"#题目20\" class=\"headerlink\" title=\"题目20\"></a>题目20</h2><p>20 建立课程的先修课程的视图</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">CREATE</span> <span class=\"keyword\">VIEW</span> PrerequisiteCourses <span class=\"keyword\">AS</span></span><br><span class=\"line\"><span class=\"keyword\">SELECT</span> C1.Cno <span class=\"keyword\">AS</span> CourseNo, C1.Cname <span class=\"keyword\">AS</span> CourseName, C2.Cname <span class=\"keyword\">AS</span> PrerequisiteName</span><br><span class=\"line\"><span class=\"keyword\">FROM</span> Course C1</span><br><span class=\"line\"><span class=\"keyword\">LEFT</span> <span class=\"keyword\">JOIN</span> Course C2 <span class=\"keyword\">ON</span> C1.Cpno <span class=\"operator\">=</span> C2.Cno;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n<ul>\n<li><code>LEFT JOIN</code> 是 SQL 中的一种连接操作，用于将两个表中的数据结合起来。具体来说，<code>LEFT JOIN</code> 会返回左侧表（在这个例子中是 <code>Course C1</code>）的所有记录，以及右侧表（在这个例子中是 <code>Course C2</code>）中符合连接条件的记录。如果右侧表中没有符合条件的记录，则结果中将包含左侧表的记录和右侧表中对应列的 <code>NULL</code> 值。</li>\n<li><strong>Course C2</strong>：这是右侧表的名称（即你要连接的表）。在这里，你正在连接的表是 <code>Course</code>，并将其命名为 <code>C2</code>。</li>\n<li><strong>ON C1.Cpno &#x3D; C2.Cno</strong>：这是连接条件，指定了如何将左侧表（<code>C1</code>）和右侧表（<code>C2</code>）进行匹配。<ul>\n<li><ul>\n<li>从 <code>C1</code> 表中的 <code>Cpno</code> 列（通常表示课程的先修课程编号）与 <code>C2</code> 表中的 <code>Cno</code> 列（表示课程编号）进行比较。</li>\n</ul>\n</li>\n<li>只有当 <code>C1.Cpno</code> 的值与 <code>C2.Cno</code> 的值相等时，才会将这两个表中的记录组合在一起。<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">SELECT</span> <span class=\"operator\">*</span> <span class=\"keyword\">FROM</span> PrerequisiteCourses;</span><br></pre></td></tr></table></figure>\n<img src=\"https://cdn.jsdelivr.net/gh/totogo7/totogo7.github.io/img/202410251723851.png\" alt=\"{3361F476-B1C4-4BFE-A918-05B5734E5112}\"></li>\n</ul>\n</li>\n</ul>\n<h2 id=\"二、思考题-1\"><a href=\"#二、思考题-1\" class=\"headerlink\" title=\"二、思考题\"></a>二、思考题</h2><p>1、对于实验任务的完成，SQL Server 提供了哪些方法或工具？</p>\n<p>2、请考虑SQL Server 的企业管理器和查询分析器中用SQL语句两种方法完成任务的场合和优缺点。</p>\n<p>1、SQL Server 提供了哪些方法或工具？</p>\n<table>\n<thead>\n<tr>\n<th>工具&#x2F;方法</th>\n<th>描述</th>\n<th>适用场合</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><strong>SQL Server Management Studio (SSMS)</strong></td>\n<td>一个集成环境，用于管理 SQL Server 和 Azure SQL 数据库。</td>\n<td>- 数据库管理<br>- 编写和执行 SQL 查询<br>- 数据备份和恢复</td>\n</tr>\n<tr>\n<td><strong>SQL Server Data Tools (SSDT)</strong></td>\n<td>用于数据库开发和管理的工具，支持项目和解决方案。</td>\n<td>- 开发和测试 SQL Server 数据库项目<br>- 集成到 Visual Studio</td>\n</tr>\n<tr>\n<td><strong>SQL Server Profiler</strong></td>\n<td>用于监控 SQL Server 的工具，可以跟踪和分析 SQL 事件。</td>\n<td>- 性能监控<br>- 调试存储过程和查询</td>\n</tr>\n<tr>\n<td><strong>Transact-SQL (T-SQL)</strong></td>\n<td>SQL Server 的扩展 SQL 语言，支持复杂查询和逻辑。</td>\n<td>- 数据查询<br>- 数据修改和管理</td>\n</tr>\n<tr>\n<td><strong>SQL Server Agent</strong></td>\n<td>任务调度和作业管理工具，用于自动化常规任务。</td>\n<td>- 定时备份<br>- 自动化报告生成</td>\n</tr>\n<tr>\n<td><strong>SQLCMD</strong></td>\n<td>命令行工具，用于与 SQL Server 进行交互。</td>\n<td>- 批量执行 SQL 脚本<br>- 自动化任务</td>\n</tr>\n<tr>\n<td><strong>Enterprise Manager</strong></td>\n<td>旧版 SQL Server 的管理工具，提供数据库和服务器管理功能。</td>\n<td>- 基本数据库管理和监控</td>\n</tr>\n<tr>\n<td><strong>Power BI</strong></td>\n<td>数据可视化工具，用于将 SQL Server 数据可视化。</td>\n<td>- 数据分析<br>- 报告和仪表盘创建</td>\n</tr>\n</tbody></table>\n<p>2、请考虑SQL Server 的企业管理器和查询分析器中用SQL语句两种方法完成任务的场合和优缺点。</p>\n<table>\n<thead>\n<tr>\n<th>特性</th>\n<th>企业管理器</th>\n<th>查询分析器</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><strong>使用场合</strong></td>\n<td>- 适合不熟悉 SQL 语法的用户</td>\n<td>- 适合需要执行复杂查询或脚本的用户</td>\n</tr>\n<tr>\n<td></td>\n<td>- 适合进行简单的数据库管理任务</td>\n<td>- 适合进行批量操作和数据分析</td>\n</tr>\n<tr>\n<td><strong>优点</strong></td>\n<td>- 界面友好，操作简单，易于上手</td>\n<td>- 支持复杂的 SQL 语句，能够执行多行和多条语句</td>\n</tr>\n<tr>\n<td></td>\n<td>- 具备可视化工具，如拖放功能，便于构建查询和报告</td>\n<td>- 支持脚本和存储过程的调试</td>\n</tr>\n<tr>\n<td></td>\n<td>- 方便进行数据的导入和导出，用户管理等任务</td>\n<td>- 可以直接执行和测试 SQL 查询，实时反馈查询结果</td>\n</tr>\n<tr>\n<td></td>\n<td>- 提供了数据模型视图，便于理解数据库结构</td>\n<td>- 可用强大的编辑功能，如语法高亮、代码补全</td>\n</tr>\n<tr>\n<td><strong>缺点</strong></td>\n<td>- 对于复杂查询支持有限，难以处理复杂的 SQL 逻辑</td>\n<td>- 界面较为简陋，对于新手用户学习成本较高</td>\n</tr>\n<tr>\n<td></td>\n<td>- 不适合批量数据处理和大规模的数据迁移</td>\n<td>- 缺乏直观的可视化工具，数据管理不如企业管理器方便</td>\n</tr>\n<tr>\n<td></td>\n<td>- 一些高级功能难以通过 GUI 完成</td>\n<td>- 执行错误的 SQL 语句可能导致数据损坏，风险较高</td>\n</tr>\n<tr>\n<td><strong>总结</strong></td>\n<td>- 适合进行简单的数据库操作，适合新手</td>\n<td>- 适合需要精细控制和复杂操作的用户</td>\n</tr>\n</tbody></table>\n<h2 id=\"三、实验报告\"><a href=\"#三、实验报告\" class=\"headerlink\" title=\"三、实验报告\"></a>三、实验报告</h2><p>对于本实验的具体内容应该包括实验预习、实验记录和实验报告三部分。其中实验预习首先要思考以上的两个问题，第二要把熟悉相关的SQL语句；实验记录主要包括向基本表输入信息，查询的结果显示等步骤；实验报告的内容及具体要求主要格式按照实验报告本上的内容要求来写。</p>\n<p>（time: 2024&#x2F;10&#x2F;24) </p>\n<p>修正1：2024.10.31 </p>\n","tags":["实验","数据库","SQL"]}]